一、变量提升

在当前作用域下的JS代码自上而下执行之前，浏览器首先会把当前作用域(window、私有作用域)中所有带VAR和FUNCTION关键字的，进行提前的声明或者定义，这种机制就是变量提升(预解释)

带VAR关键字的只是提前的声明(declare)
带FUNCTION关键字的，声明和定义(defined)都提前完成了
只声明没有定义，默认值undefined
在“全局作用域”下声明的变量,相当于给全局对象window增加了一个属性(私有作用域不具备这个特点)

二、作用域

1、函数执行的步骤

形成一个新的私有作用域，供函数体中代码执行
形参赋值
私有作用域下的预解释
私有作用域中的JS代码自上而下执行
作用域释放或者不释放
2、作用域 [ scope ]

全局作用域：浏览器加载页面就形成的 
私有作用域：函数执行形成的私有作用域

不管是全局的还是私有的作用域，都是给JS代码提供运行环境的，我们把作用域称之为 栈内存

所有的引用数据类型在定义的时候，都会开辟一个新的内容空间，来存储自己的值，我们把存储东西的内存空间称之为 堆内存

对象在自己的堆内存中存储的是 “键值对”
函数在自己的堆内存中存储的是 “代码字符串”
全局变量和私有变量 
私有变量

函数的形参是私有作用域中的私有变量
在私有作用域中声明过的变量或函数都是私有的
全局变量

除了私有变量其它都是全局变量
在全局作用域中声明的变量肯定是全局变量
函数执行形成一个私有的作用域(栈内存) 
1、形参赋值 
2、变量提升 
形参或者是声明过的变量是私有的变量,否则不是私有的

私有的变量受到了保护，和外界的变量没有关系，不会受到任何的干扰，我们把函数执行的这种保护机制叫做 “闭包”

在私有作用域中执行代码的时候，如果当前这个变量不是私有的变量，则向上一级查找，也不是上一级私有的，则继续向上查找，一直找到window…，我们把这种向上一层层查找的机制叫做 “作用域链”
如何查找当前作用域的上级作用域

看当前函数是在哪定义的，那么它执行的上级作用域就是谁，和它在哪执行没有关系