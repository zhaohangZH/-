/*
事件：他就是一件事情或者一个行为（元素天生自带的行为），即使我们没有编写xxx.onclick=function（）{...}这样的代码，元素也有点击事件，当我们点击该元素，也同样会触发事件，只不过什么事都不做而已。
 xxx.onclick=function（）{...}
 1、事件行为本身
 [PC]
 click
 dblclick（双击）
 mouseover：鼠标划入
 mouseenter：鼠标进入
 mouseout：鼠标滑出
 mouseleave：鼠标离开
 mousemove：鼠标移动
 mousedown鼠标左键按下
 mouseup鼠标左键抬起
 mousewheel鼠标滚轮滚动


 keydown
 keypress：键盘长按
 keyup

 load:加载完成事件oImg.onload/window.onload...
 unload/beforeunload
 error：加载失败事件
 scroll：当滚动条滚动触发事件执行
 resize：当窗口大小发生改变的时候  window.onresize=function(){}当浏览器窗口大小发生改变的时候触发这个事件执行

 change：表单内容发生改变
 focus：表单获取到焦点(光标)
 blur：表单失去焦点
 select：表单被选中(下拉框)
 checked：表单被选中(单选或者复选按钮)

 [移动端]
 PC端的鼠标事件在移动端都不是很实用，因为手机上不可能拿鼠标操作，我们都需要通过手指来操作；
 click在移动端也能用，但是有300MS延迟的问题（当我们点击一下，浏览器需要在300ms后在触发事件执行：因为他要去看一下，在这个时间内是否触发了第二次点击，如果触发了，他认为click没触发，dblclick触发了；移动端认为click是单击事件而不是点击）
 input：等价于PC的keydown/keyup，表单内容输入过程中触发这个事件
  touchstart（手指按到屏幕上） / touchmove（手指在屏幕上移动） / touchend（手指离开屏幕） / touchcancel（手指操作取消：一般都是意外状况导致操作取消）：单手指事件
 gesturestart（多手指按下） / gesturechange（多手指改变位置） / gestureend（手指离开）：多手指事件
  ...
移动端的键盘和PC也不一样，手机上一般都是虚拟键盘
移动端的keyup/keydown/keypress等键盘事件，大部分手机都不兼容，如果需要监听表单内容的改变，我们需要使用input事件

特殊（新版ES标准中增加的）
dragstrat:拖拽开始
drag：拖动中
dragend：拖拽结束
...


 2、绑定方法（事件绑定）
给事件绑定方法，当事件触发的时候我们能做一些事情（DOM0级事件绑定/DOM2级事件绑定）
DOM0事件绑定：给元素的某些事件私有属性（onclick：null）赋值的操作，当以后我们触发实现的时候，浏览器会自动找，元素的事件私有属性，然后把后面赋的值执行（赋值一般都是函数）
不能给当前元素的某一个事件绑定多个方法，只能绑定一个，绑定多个，最后的也会把前面绑定的都覆盖掉
如果私有属性中没有这事件属性，那么我们则无法进行绑定
（例如：DOMCongtentLoaded）
 document.body.onclick = function () {
     console.log(1);
 };
 document.body.onclick = function () {
     console.log(2);//->点击的时候只能输出2
 };

->什么是事件对象：当元素的某个事件触发的时候执行浏览器会对应绑定的方法，而且还给这个方法默认传递了参数值(事件对象)
 document.body.onclick = function (e) {
    //->e：设置一个形参（可以随便起名字，我们一般都用e/ev来命名）接收当点击行为触发执行方法的时候，浏览器传递个方法的那个实参<->arguments[0]也可以获取到这个结果
 };
//->给body的点击事件行为绑定了一个方法，当触发这个行为的时候，浏览器会把绑定的方法执行
//->重点：不仅仅把方法执行，而且还给方法传递了一个实参值，我们把这个值称之为'事件对象'


























